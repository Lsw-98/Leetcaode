"""

你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，
影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，
如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。
给定一个代表每个房屋存放金额的非负整数数组，计算你不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额

示例 1：
输入：[1,2,3,1]
输出：4
解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。
偷窃到的最高金额 = 1 + 3 = 4

示例 2：
输入：[2,7,9,3,1]
输出：12
解释：偷窃 1 号房屋 (金额 = 2), 偷窃 3 号房屋 (金额 = 9)，接着偷窃 5 号房屋 (金额 = 1)。
偷窃到的最高金额 = 2 + 9 + 1 = 12

"""


def rob(nums):
    dp = [0 for _ in range(len(nums) + 2)]
    for i in range(2, len(dp)):
        dp[i] = max(dp[i - 2] + nums[i - 2], dp[i - 1])
    return dp[-1]


print(rob([1, 2, 1, 1]))
print(rob([1, 2]))
print(rob([1, 2, 3, 1]))
print(rob([2, 7, 9, 3, 1]))


# 开题条件: 小论文80%工作量
# 中期（第五个学期）sci小论文
# 全年级综合排名（学生测评+导师测评）前15% + sci小论文 可实习两个月（研二暑期）
# 答辩之前大论文评审
